#   geom_tile(colour="blue") +
#   scale_fill_gradient(low = "yellow", high = "red") +
#   ylim(c(0, max(subsetD$value) + 0.5)) +
#   #   scale_y_discrete(breaks=y_breaks, labels=y_labels) +
#   coord_polar(theta="x") +
#   theme(panel.background=element_blank(),
#         axis.title=element_blank(),
#         panel.grid=element_blank(),
#         axis.text.x=element_blank(),
#         axis.ticks=element_blank(),
#         axis.text.y=element_text(size=5))
# p2
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
ggsave(filename="plot3.png")
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p
ggsave(filename="plot4.png")
p <- p + coord_fixed(ratio = 1)
p
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + scale_prgn()
p <- p + scale_months()
p <- p + scale_y_discrete(expand = c(0, 0))
p <- p + theme_heatmap()
p
ggsave(filename="plot4.png")
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + scale_months()
p <- p + scale_y_discrete(expand = c(0, 0))
p <- p + theme_heatmap()
p
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + theme_heatmap()
p
ggsave(filename="plot4.png")
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
ggsave(filename="plot3.png")
# ROTATE THE HEATMAP FOR BETTER INTERPRETATION
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + theme_heatmap()
p
ggsave(filename="plot4.png")
# HEAT MAP VISUALIZATION TECHNIQUE
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
# p <- p + theme_heatmap()
p
# PRETTIFY PLOTS ############
# Scales --------------------
scale_year <- function() {
return(
scale_x_continuous(
name = "Year",
# using 1980 will result in gap
limits = c(1974, 1979.917),
expand = c(0, 0),
# still want 1980 at end of scale
breaks = c(seq(1974, 1979, 1), 1979.917),
labels = function(x) {ceiling(x)}
)
)
}
scale_months <- function() {
return(
scale_x_discrete(
name = "Month",
expand = c(0, 0),
# this is for faceting,
# can be removed otherwise
labels = fancy_label
)
)
}
scale_deaths <- function() {
return (
scale_y_continuous(
name = "Deaths in Thousands",
# set nice limits and breaks
limits = c(0, 4000),
expand = c(0, 0),
breaks = seq(0, 4000, 1000),
# reduce label space required
labels = function(x) {paste0(x / 1000, 'k')}
)
)
}
# FANCY PALETTE FOR HEATMAPS #######
# Uses discrete color scale for
# continuous gradient scale
scale_prgn <- function() {
return(
scale_fill_gradientn(
colours = brewer_pal(
type = "div",
palette = "PRGn")(5),
name = "Deaths",
limits = c(0, 4000),
breaks = c(0, 2000, 4000)
)
)
}
# THEMES ####################
theme_heatmap <- function() {
return (
theme(
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.direction = "horizontal",
legend.position = "bottom",
panel.background = element_blank()
)
)
}
theme_legend <- function() {
return(
theme(
legend.position="bottom",
legend.title = element_blank(),
legend.background = element_blank(),
legend.key = element_blank()
)
)
}
theme_guide <- function() {
options = list(size = 1)
return(
guides(
colour = guide_legend(
"year",
override.aes = options
)
)
)
}
# FANCY LABELER FOR FACET PLOTS #######
# This code drops the first label if it
# is an odd numbered facet.
count <- 1
fancy_label <- function(x) {
count <<- count + 1
if (count %% 2 == 0) { return(x) }
else { return(c("", x[2:12])) }
}
# I don't 100% guarantee that this works.
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
theme_heatmap <- function() {
return (
theme(
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.direction = "horizontal",
panel.background = element_blank()
)
)
}
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
theme_heatmap <- function() {
return (
theme(
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.background = element_blank()
)
)
}
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
p + coord_polar()
# HEAT MAP VISUALIZATION TECHNIQUE
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
ggsave(filename="plot3.png")
# ROTATE THE HEATMAP FOR BETTER INTERPRETATION
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + theme_heatmap()
p
ggsave(filename="plot4.png")
library(ggplot2)
library(reshape2)
source("pretty.r")
# extract Years for grouping later
times <- time(Seatbelts)
Years <- factor(floor(times), ordered = TRUE)
Months <- factor(month.abb[cycle(times)],levels = month.abb,ordered = TRUE)
# BUILD THE DATA FRAME
myData <- data.frame(Seatbelts)
myData <- data.frame(
times = as.numeric(times),
Years = Years,
Months = Months,
myData)
# names(myData)
# head(myData)
# pairs(myData[,-c(1,2,3)])
# MELT THE DATASET
melted <- melt(myData, id=c("Years", "Months", "times"))
melted
# CREATE A MULTILINE PLOT
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = value, group = Years, color = Years)
)
p <- p + geom_line(alpha = 0.9)
p <- p + ggtitle("Multiple Lines Plot")
p <- p + theme_bw()
p <- p + theme(axis.title = element_blank())
p <- p + scale_x_discrete(expand=c(0,0))
p <- p + theme(panel.grid.major.x=element_line(size=0.15, color="grey"))
p <- p + theme(panel.grid.major.y=element_line(size=0.15, color="grey"))
p <- p + theme_guide() + theme_legend()
p
ggsave(filename="plot1.png")
# ROTATE THE MULTIPLE LINES PLOT TO GET A MULTIPLE STAR PLOT FOR BETTER INTERPRETATION
p <- p + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
p <- p + coord_polar() + facet_wrap(~Years, nrow=2)
p <- p + ggtitle("Small Multiple Star Plot")
p <- p + theme(strip.background=element_blank())
p <- p + theme(panel.border=element_blank())
# p <- p + theme(axis.text.x=element_text(size=10))
p
ggsave(filename="plot2.png")
# HEAT MAP VISUALIZATION TECHNIQUE
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
ggsave(filename="plot3.png")
# ROTATE THE HEATMAP FOR BETTER INTERPRETATION
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + theme_heatmap()
p
ggsave(filename="plot4.png")
# subsetD <- subset(melted, variable == "DriversKilled")
# p2 <- ggplot(subsetD, aes(x=times, y=value, fill=value)) +
#   geom_tile(colour="blue") +
#   scale_fill_gradient(low = "yellow", high = "red") +
#   ylim(c(0, max(subsetD$value) + 0.5)) +
#   #   scale_y_discrete(breaks=y_breaks, labels=y_labels) +
#   coord_polar(theta="x") +
#   theme(panel.background=element_blank(),
#         axis.title=element_blank(),
#         panel.grid=element_blank(),
#         axis.text.x=element_blank(),
#         axis.ticks=element_blank(),
#         axis.text.y=element_text(size=5))
# p2
p <- p + theme_heatmap() + theme(legend.direction="vertical")
p
ggsave(filename="plot4.png")
library(ggplot2)
library(reshape2)
source("pretty.r")
# extract Years for grouping later
times <- time(Seatbelts)
Years <- factor(floor(times), ordered = TRUE)
Months <- factor(month.abb[cycle(times)],levels = month.abb,ordered = TRUE)
# BUILD THE DATA FRAME
myData <- data.frame(Seatbelts)
myData <- data.frame(
times = as.numeric(times),
Years = Years,
Months = Months,
myData)
# names(myData)
# head(myData)
# pairs(myData[,-c(1,2,3)])
# MELT THE DATASET
melted <- melt(myData, id=c("Years", "Months", "times"))
melted
# CREATE A MULTILINE PLOT
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = value, group = Years, color = Years)
)
p <- p + geom_line(alpha = 0.9)
p <- p + ggtitle("Multiple Lines Plot")
p <- p + theme_bw()
p <- p + theme(axis.title = element_blank())
p <- p + scale_x_discrete(expand=c(0,0))
p <- p + theme(panel.grid.major.x=element_line(size=0.15, color="grey"))
p <- p + theme(panel.grid.major.y=element_line(size=0.15, color="grey"))
p <- p + theme_guide() + theme_legend()
p
ggsave(filename="plot1.png")
# ROTATE THE MULTIPLE LINES PLOT TO GET A MULTIPLE STAR PLOT FOR BETTER INTERPRETATION
p <- p + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
p <- p + coord_polar() + facet_wrap(~Years, nrow=4)
p <- p + ggtitle("Small Multiple Star Plot")
p <- p + theme(strip.background=element_blank())
p <- p + theme(panel.border=element_blank())
# p <- p + theme(axis.text.x=element_text(size=10))
p
ggsave(filename="plot2.png")
# HEAT MAP VISUALIZATION TECHNIQUE
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
ggsave(filename="plot3.png")
# ROTATE THE HEATMAP FOR BETTER INTERPRETATION
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + theme_heatmap() + theme(legend.direction="vertical")
p
ggsave(filename="plot4.png")
# subsetD <- subset(melted, variable == "DriversKilled")
# p2 <- ggplot(subsetD, aes(x=times, y=value, fill=value)) +
#   geom_tile(colour="blue") +
#   scale_fill_gradient(low = "yellow", high = "red") +
#   ylim(c(0, max(subsetD$value) + 0.5)) +
#   #   scale_y_discrete(breaks=y_breaks, labels=y_labels) +
#   coord_polar(theta="x") +
#   theme(panel.background=element_blank(),
#         axis.title=element_blank(),
#         panel.grid=element_blank(),
#         axis.text.x=element_blank(),
#         axis.ticks=element_blank(),
#         axis.text.y=element_text(size=5))
# p2
p <- p + theme(axis.text.x=element_text(size=8))
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = value, group = Years, color = Years)
)
p <- p + geom_line(alpha = 0.9)
p <- p + ggtitle("Multiple Lines Plot")
p <- p + theme_bw()
p <- p + theme(axis.title = element_blank())
p <- p + scale_x_discrete(expand=c(0,0))
p <- p + theme(panel.grid.major.x=element_line(size=0.15, color="grey"))
p <- p + theme(panel.grid.major.y=element_line(size=0.15, color="grey"))
p <- p + theme_guide() + theme_legend()
p
ggsave(filename="plot1.png")
# ROTATE THE MULTIPLE LINES PLOT TO GET A MULTIPLE STAR PLOT FOR BETTER INTERPRETATION
p <- p + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
p <- p + coord_polar() + facet_wrap(~Years, nrow=4)
p <- p + ggtitle("Small Multiple Star Plot")
p <- p + theme(strip.background=element_blank())
p <- p + theme(panel.border=element_blank())
p <- p + theme(axis.text.x=element_text(size=8))
p
ggsave(filename="plot2.png")
p <- p + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
p <- p + coord_polar() + facet_wrap(~Years, nrow=2)
p <- p + ggtitle("Small Multiple Star Plot")
p <- p + theme(strip.background=element_blank())
p <- p + theme(panel.border=element_blank())
p <- p + theme(axis.text.x=element_text(size=8))
p
ggsave(filename="plot2.png")
p <- p + theme(axis.text.x=element_text(size=6))
p
ggsave(filename="plot2.png")
library(ggplot2)
library(reshape2)
source("pretty.r")
# extract Years for grouping later
times <- time(Seatbelts)
Years <- factor(floor(times), ordered = TRUE)
Months <- factor(month.abb[cycle(times)],levels = month.abb,ordered = TRUE)
# BUILD THE DATA FRAME
myData <- data.frame(Seatbelts)
myData <- data.frame(
times = as.numeric(times),
Years = Years,
Months = Months,
myData)
# names(myData)
# head(myData)
# pairs(myData[,-c(1,2,3)])
# MELT THE DATASET
melted <- melt(myData, id=c("Years", "Months", "times"))
melted
# CREATE A MULTILINE PLOT
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = value, group = Years, color = Years)
)
p <- p + geom_line(alpha = 0.9)
p <- p + ggtitle("Multiple Lines Plot")
p <- p + theme_bw()
p <- p + theme(axis.title = element_blank())
p <- p + scale_x_discrete(expand=c(0,0))
p <- p + theme(panel.grid.major.x=element_line(size=0.15, color="grey"))
p <- p + theme(panel.grid.major.y=element_line(size=0.15, color="grey"))
p <- p + theme_guide() + theme_legend()
p
ggsave(filename="plot1.png")
# ROTATE THE MULTIPLE LINES PLOT TO GET A MULTIPLE STAR PLOT FOR BETTER INTERPRETATION
p <- p + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
p <- p + coord_polar() + facet_wrap(~Years, nrow=2)
p <- p + ggtitle("Small Multiple Star Plot")
p <- p + theme(strip.background=element_blank())
p <- p + theme(panel.border=element_blank())
p <- p + theme(axis.text.x=element_text(size=6))
p
ggsave(filename="plot2.png")
# HEAT MAP VISUALIZATION TECHNIQUE
p <- ggplot(subset(melted, variable == "DriversKilled"),
aes(x = Months, y = Years))
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low = "yellow", high = "red")
p <- p + theme_heatmap()
p
ggsave(filename="plot3.png")
# ROTATE THE HEATMAP FOR BETTER INTERPRETATION
p <- p + coord_polar()
p <- p + ggtitle("Circular Heatmap")
p <- p + theme(panel.background=element_blank())
p <- p + theme(panel.grid=element_blank())
p <- p + theme(axis.title=element_blank())
p <- p + theme(axis.ticks=element_blank())
p <- p + annotate("text", x=0, y=-9, label="Years increase outwardly", size=3)
p <- p + theme_heatmap() + theme(legend.direction="vertical")
p
ggsave(filename="plot4.png")
# subsetD <- subset(melted, variable == "DriversKilled")
# p2 <- ggplot(subsetD, aes(x=times, y=value, fill=value)) +
#   geom_tile(colour="blue") +
#   scale_fill_gradient(low = "yellow", high = "red") +
#   ylim(c(0, max(subsetD$value) + 0.5)) +
#   #   scale_y_discrete(breaks=y_breaks, labels=y_labels) +
#   coord_polar(theta="x") +
#   theme(panel.background=element_blank(),
#         axis.title=element_blank(),
#         panel.grid=element_blank(),
#         axis.text.x=element_blank(),
#         axis.ticks=element_blank(),
#         axis.text.y=element_text(size=5))
# p2
names(myData)
library(shiny)
shiny::runGitHub('msan622', 'coyotemojo', subdir='homework5')
runGitHub("msan622", "yosukekatada", subdir = "homework5")
